name: Build and deploy

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main", "20220619_terraform_action" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: "${{ env.REGISTRY }}/${{ github.repository }}:latest"
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    needs: build

    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
      TF_VAR_PROJECT: ${{ secrets.TF_VAR_PROJECT }}
      TF_VAR_REGION: ${{ secrets.TF_VAR_REGION }}
      TF_VAR_ZONE: ${{ secrets.TF_VAR_ZONE }}
      TF_VAR_DISCORD_TOKEN: ${{ secrets.TF_VAR_DISCORD_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0.7.3
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true # optional, default is true
          export_environment_variables: true # optional, default is true
          cleanup_credentials: true # optional, default is true
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0

      - name: Terraform Init
        run: terraform init -upgrade -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET_NAME }}"

      - name: Terraform Apply
        run: terraform apply -replace=module.gce-worker-container.google_compute_instance.vm -auto-approve
